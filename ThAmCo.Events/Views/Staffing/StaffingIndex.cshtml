@model ThAmCo.Events.ViewModels.Staffing.Index

@{
    ViewData["Title"] = "StaffingIndex";
}

<h2>Staff Booking Page</h2>

<h3>Staffs</h3>
<h4>Registered Staffs Count : @Model.Staffs.Count()</h4>

<p>
    <a asp-action="Create" asp-items=Id>Book a Staff</a>
</p>

<table class="table table-striped table-responsive">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Staffs.FirstOrDefault().Staff)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staffs.FirstOrDefault().Event)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staffs.FirstOrDefault().Staff.FirstAider)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Staffs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Staff.Fullname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Event.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Staff.FirstAider)
                </td>
                <td>
                    <a asp-action="Delete" asp-route-staffid="@item.StaffId" asp-route-eventid="@item.EventId">Remove</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<h3>Events</h3>
<h4>Event Count : @Model.Events.Count() </h4>
<p>
    <a asp-controller="Event" asp-action="EventIndex">Go to event</a>
</p>
<table class="table table-striped table-responsive">
    <thead>
        <tr>
            <th>
                Events
            </th>
            <th>
                Warning(s)
            </th>
            <th>
                Total Guest
            </th>
            <th>
                Total Staff
            </th>
            <th>
                Total First Aider
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Events)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @{
                    int guestCount = Model.Guests.Where(a => a.EventId == item.Id).Count();
                    int staffCount = Model.Staffs.Where(a => a.EventId == item.Id).Count();
                    int firstAidCount = Model.Staffs.Where(a => a.Staff.FirstAider && a.EventId == item.Id).Count();

                }
                @if ((staffCount <= (guestCount / 10)) && guestCount > 0)
                {
                    <p class="text-danger">
                        <b>+ Staff Insufficient</b>
                    </p>
                }
                @if ((firstAidCount == 0) && guestCount > 0)
                {
                    <p class="text-danger">
                        <b>+ Require First Aider</b>
                    </p>
                }
            </td>
            <td>
                @guestCount
            </td>
            <td>
                @staffCount
            </td>
            <td>
                @firstAidCount
            </td>
        </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

